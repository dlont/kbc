from dataprovider import PandasSurvivedClassSelector, PandasDrownedClassSelector
from numpy import linspace
config={'annotation': 'Modelling data distributions.',
 'command': 'bin/kbc_direct_marketing_mock.py -c configs/conf_cff.py',
 'latex_main': 'latex/report.tex',
 'model':'advanced',
 'mode': 'report',
#  'views':['features_1d_train_test_p1','features_1d_train_test_p2','features_2d_train_test_correlations_p1'],
 'views':['features_1d_train_test_p1'],
 'features_1d_train_test_p1':{
     'annotation': 'Age, Sex, Tenure train/test distributions.',
     'type':'1d_train_test',
     'output_filename':'features_1d_train_test_p1',
     'layout':{'nrows':2, 'ncols':3},
     'size': [8.5,5.0],
     'features':['Sex','Age','Tenure']
},
 'features_1d_train_test_p2':{
     'annotation': 'Fare train/test distributions.',
     'type':'1d_train_test',
     'output_filename':'features_1d_train_test_p2',
     'layout':{'nrows':1, 'ncols':2},
     'size': [8.5,5.0],
     'features':['Fare']
  },
  'features_2d_train_test_correlations_p1':{
     'annotation': 'Fare VS Age and SibSp VS Parch train/test correlations.',
     'type':'2d_train_correlations',
     'output_filename':'features_2d_train_test_p1',
     'layout':{'nrows':1, 'ncols':2},
     'size': [8.5,5.0],
     'features':[['Fare','Age'],['SibSp','Parch']]
  },
  'Sex':{
        'data_provider':'train_data_provider',
        'title':'Gender (M=0,F=1)',
        'style':{
            'type' : 'categorical',
            'under_over_flow' : [False,False],
            # 'bins':['male','female']
            'bins':[0,1]
        },
        'class1':None,
        'class2':None,
        'class1_marker_test':'.',
        'class1_color_train':'r',
        'class1_color_test':'r',
        'class1_line_train':'',
        'class1_line_test':'',
        'class1_label_train':'Train',
        'class1_label_test':'Test',
        'class2_marker_test':'.',
        'class2_color_train':'b',
        'class2_color_test':'b',
        'class2_line_train':'',
        'class2_line_test':'',
        'class2_label_train':'Drowned (train)',
        'class2_label_test':'Drowned (test)',
  },
  'Age':{
        'data_provider':'train_data_provider',
        'title':'Age, years',
        'style':{
            'type' : 'numerical',
            'under_over_flow' : [False,True],
            'bins':linspace(-0.5,99.5,20),
        },
        'class1':None,
        'class2':None,
        'class1_marker_test':'.',
        'class1_color_train':'r',
        'class1_color_test':'r',
        'class1_line_train':'',
        'class1_line_test':'',
        'class1_label_train':'Train',
        'class1_label_test':'Test',
        'class2_marker_test':'.',
        'class2_color_train':'b',
        'class2_color_test':'b',
        'class2_line_train':'',
        'class2_line_test':'',
        'class2_label_train':'Drowned (train)',
        'class2_label_test':'Drowned (test)',
  },
  'Tenure':{
        'data_provider':'train_data_provider',
        'title':'Tenure, month',
        'style':{
            'type' : 'numerical',
            'under_over_flow' : [False,True],
            'bins':linspace(-0.5,300.5,31),
            'logy':True,
            'legend':{'prop':{'size': 6}}
        },
        'class1':None,
        'class2':None,
        'class1_marker_test':'.',
        'class1_color_train':'r',
        'class1_color_test':'r',
        'class1_line_train':'',
        'class1_line_test':'',
        'class1_label_train':'Train',
        'class1_label_test':'Test',
        'class2_marker_test':'.',
        'class2_color_train':'b',
        'class2_color_test':'b',
        'class2_line_train':'',
        'class2_line_test':'',
        'class2_label_train':'Drowned (train)',
        'class2_label_test':'Drowned (test)',
  },
#   'Embarked':{
#         'data_provider':'train_data_provider',
#         'title':'Port of Embarkation',
#         'style':{
#             'type' : 'categorical',
#             'under_over_flow' : [False,False],
#             # 'bins':['Unkw','C','Q','S'],
#             'bins':[0,1,2,3],
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
#   'Cabin':{
#         'data_provider':'train_data_provider',
#         'title':'Port of Embarkation',
#         'style':{
#             'type' : 'categorical',
#             'under_over_flow' : [False,False],
#             'bins':['Unkw','C','Q','S'],
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
#   'Fare':{
#         'data_provider':'train_data_provider',
#         'title':'Ticket price',
#         'style':{
#             'type' : 'numerical',
#             'under_over_flow' : [False,True],
#             'bins':linspace(0.5,100.5,21),
#             'legend':{'prop':{'size': 6}},
#             'logy':True,
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
#   'Pclass':{
#         'data_provider':'train_data_provider',
#         'title':'Ticket class',
#         'style':{
#             'type' : 'numerical',
#             'under_over_flow' : [False,False],
#             'bins':linspace(0.5,3.5,4),
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
#   'SibSp':{
#         'data_provider':'train_data_provider',
#         'title':'Number of siblings, spouses',
#         'style':{
#             'type' : 'numerical',
#             'under_over_flow' : [False,False],
#             'bins':linspace(-0.5,9.5,11),
#             'logy':True,
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
#   'Parch':{
#         'data_provider':'train_data_provider',
#         'title':'Number of caregivers',
#         'style':{
#             'type' : 'numerical',
#             'under_over_flow' : [False,False],
#             'bins':linspace(-0.5,9.5,11),
#             'logy':True,
#         },
#         'class1':PandasSurvivedClassSelector(),
#         'class2':PandasDrownedClassSelector(),
#         'class1_marker_test':'.',
#         'class1_color_train':'r',
#         'class1_color_test':'r',
#         'class1_line_train':'',
#         'class1_line_test':'',
#         'class1_label_train':'Train',
#         'class1_label_test':'Test',
#         'class2_marker_test':'.',
#         'class2_color_train':'b',
#         'class2_color_test':'b',
#         'class2_line_train':'',
#         'class2_line_test':'',
#         'class2_label_train':'Drowned (train)',
#         'class2_label_test':'Drowned (test)',
#   },
  'train_data_provider':{
        'input_file':'data/28_01_2020/data.csv'
  }
 }